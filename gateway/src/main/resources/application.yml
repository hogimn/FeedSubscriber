#file: noinspection SpellCheckingInspection
server:
  port: ${common.gateway.port}

spring:
  config:
    import: file:./common/src/main/resources/application-common.yml
  application:
    name: gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: 'true'
          lower-case-service-id: 'true'
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
      globalcors:
        cors-configurations:
          '[/**]':
            allow-credentials: true
            allowed-origins: "${common.frontend.base-url}"
            allowed-methods: "*"
            allowed-headers: "*"
      routes:
        - id: auth
          uri: "${common.auth.base-url}"
          predicates:
            - Path=/auth/**
          filters:
            - RewritePath=/auth/(?<path>.*), /$\{path}
        - id: restful
          uri: "${common.restful.base-url}"
          predicates:
            - Path=/restful/**
          filters:
            - RewritePath=/restful/(?<path>.*), /$\{path}
            - TokenRelay=
  security:
    oauth2:
      client:
        registration:
          messaging-gateway-oidc:
            provider: gateway-client-provider
            client-id: relive-client
            client-secret: relive-client
            authorization-grant-type: authorization_code
            redirect-uri: "${common.gateway.base-url}/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - profile
            client-name: messaging-gateway-oidc
          react-client:
            provider: gateway-client-provider
            client-id: react-client
            client-secret: react-client
            authorization-grant-type: authorization_code
            redirect-uri: "${frontend.authorized-url}"
            scope:
              - openid
              - profile
            client-name: react-client
        provider:
          gateway-client-provider:
            authorization-uri: "${common.auth.base-url}/oauth2/authorize"
            token-uri: "${common.auth.base-url}/oauth2/token"
            jwk-set-uri: "${common.auth.base-url}/oauth2/jwks"
            user-info-uri: "${common.auth.base-url}/userinfo"
            user-name-attribute: sub
  main:
    web-application-type: reactive

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.springframework.cloud.gateway: INFO

eureka:
  client:
    enabled: true
    register-with-eureka: false
    fetch-registry: true
    serviceUrl:
      defaultZone: "${common.eureka.context-url}"